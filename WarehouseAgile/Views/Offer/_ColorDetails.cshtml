@model WarehouseAgile.Color

<h3>Edycja @Model.Name</h3>

@using (Ajax.BeginForm("SaveColor", "", new AjaxOptions() { OnSuccess = "saveColorSuccess", OnFailure = "saveColorError", LoadingElementId = "loading4", HttpMethod = "POST" }, new { id = "color-form" }))
{
    Html.ValidationSummary(true);
    @Html.Hidden("color-id", Model.Id)
    <div class="row">
        <div class="column-a">Usuń:</div>
        <div class="column-b"><a href="@Url.Action("DeleteColor", "Offer", new { color = @Model.Id })" rel="delete-color" class="ui-state-default ui-corner-all icon-anchor"><span class="ui-icon ui-icon-trash"></span></a></div>
    </div>
    <div class="row">
        <div class="column-a">Nazwa:</div>
        <div class="column-b">@Html.TextBoxFor(m => m.Name) @Html.ValidationMessageFor(m => m.Name, "pole nie może być puste")</div>
    </div>
    <div class="row">
        <div class="column-a">Cena:</div>
        <div class="column-b">@Html.TextBoxFor(m => m.Price) zł @Html.ValidationMessageFor(m => m.Price, "pole musi być liczbą nieujemną")</div>
    </div>
    <div class="row">
        <div class="column-a">&nbsp;</div>
        <div class="column-b"><input type="submit" value="Zapisz" /></div>
    </div>
}

<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>